#!/command/with-contenv bash

chmod -f -R 0755 /assets/{defaults,functions} > /dev/null 2>&1
chmod -f -R 0755 /etc/{cont-init.d,cont-finish.d,services.available} > /dev/null 2>&1
source /assets/functions/00-container
output_off
PROCESS_NAME="container-init"
showoff

# Clean OS logroate directory
rm -rf /etc/logrotate.d/*
mkdir -p /assets/logrotate

mkdir -p "${CONTAINER_LOG_FILE_PATH}"
touch "${CONTAINER_LOG_FILE_PATH}"/"${CONTAINER_LOG_FILE_NAME}"
echo "** Container Name: ${CONTAINER_NAME} - Commencing Logging" >> "${CONTAINER_LOG_FILE_PATH}"/"${CONTAINER_LOG_FILE_NAME}"
create_logrotate container "${CONTAINER_LOG_FILE_PATH}"/"${CONTAINER_LOG_FILE_NAME}"

### Routine to check if container has been restarted or not
if [ -d "/tmp/.container" ] ; then
    print_notice "Detected Container that has been restarted - Cleaning '/tmp/.container' files"
    rm -rf /tmp/.container/*
    rm -rf /etc/services.d/*
    echo "$(date +%s) $(date +'%Y-%m-%d %H:%M:%S %Z') - Warm restart detected" >> /tmp/.container/container-restart
else
    print_debug "Cold Container startup detected - Proceeding to initialize services normally"
    mkdir -p /tmp/.container/
    echo "$(date +%s) $(date +'%Y-%m-%d %H:%M:%S %Z') - Container started" >> /tmp/.container/container-startup
fi

print_debug "Adding shortcuts to .bashrc"
cat <<EOF >> /root/.bashrc
source /assets/functions/00-container
alias env='with-contenv env | sort'

service_down() {
    case "\${1}" in
        all )
            echo "** Disabling all services"
            for service in /var/run/s6/legacy-services/* ; do
                echo "** Disabling s6 service '\$(basename \${service})'"
                s6-svc -d /var/run/s6/legacy-services/\$(basename \${service})
            done
        ;;
        * )
            if [ -d "/var/run/s6/legacy-services/\$1" ] ; then
                echo "** Disabling s6 service '\$1'"
                s6-svc -d /var/run/s6/legacy-services/\$1
            fi
        ;;
    esac
}

service_list() {
    ls -1 /var/run/s6/legacy-services
}

service_reset() {
    case "\${1}" in
        all )
            echo "** Resetting all services"
            for service in /var/run/s6/legacy-services/* ; do
                echo "** Reset s6 service '\$(basename \${service})'"
                rm -rf /tmp/.container/\$(basename \${service})
                #s6-svc -u /var/run/s6/legacy-services/\$(basename \${service})
            done
        ;;
        * )
            if [ -d "/var/run/s6/legacy-services/\$1" ] ; then
                echo "** Reset s6 service '\$1'"
                rm -rf /tmp/.container/\$1
            fi
        ;;
    esac
}

service_up() {
    case "\${1}" in
        all )
            echo "** Enabling all services"
            for service in /var/run/s6/legacy-services/* ; do
                echo "** Enabling s6 service '\$(basename \${service})'"
                s6-svc -u /var/run/s6/legacy-services/\$(basename \${service})
            done
        ;;
        * )
            if [ -d "/var/run/s6/legacy-services/\$1" ] ; then
                echo "** Enabling s6 service '\$1'"
                s6-svc -u /var/run/s6/legacy-services/\$1
            fi
        ;;
    esac
}

EOF

## Show last changelog version and details of current running image
if [ -f "/assets/.changelogs/${IMAGE_NAME/\//_}.md" ] ; then
    changelogname="/assets/.changelogs/${IMAGE_NAME/\//_}.md"
    elif [ -f /assets/.changelogs/docker-${IMAGE_NAME/\//_}.md ] ; then
    changelogname="/assets/.changelogs/docker-${IMAGE_NAME/\//_}.md"
else
    if [ -f /assets/.changelogs/tiredofit_docker-${IMAGE_NAME/\//_}.md ] ; then
        changelogname="/assets/.changelogs/tiredofit_docker-${IMAGE_NAME/\//_}.md"
    else
        strip_image_repo_url=$(echo ${IMAGE_REPO_URL%/} | sed "s#https://github.com/##g")
        if [ -f /assets/.changelogs/${strip_image_repo_url/\//_}.md ] ; then
            changelogname="/assets/.changelogs/${strip_image_repo_url/\//_}.md"
        fi
    fi
fi

## Add Support to list all Changelogs known of all base images
if [ -d "/assets/.changelogs" ] ; then
    cat <<EOF >> /root/.bashrc
image_version() {
    for clname in /assets/.changelogs/* ; do
        version=\$(head -n 1 \$clname | awk '{print \$2}')
        echo \"Image: $(basename \$clname) \$version\"
    done
}

EOF
fi

if [ -z "${changelogname// }" ] ; then
    print_debug "Not adding 'changelog' command to .bashrc as I can't detect what changelog it is"
    echo "image_changelog() { echo '** Sorry - I do not know what image this is. Check if there are changelogs in /assets/.changelogs';}" >> /root/.bashrc
else
    print_debug "Adding 'changelog' command to .bashrc"
    echo "image_changelog() { echo \"** Showing the most recent version entry changelog for ${IMAGE_NAME} - See more at /assets/.changelogs\" ; awk '/^##/{p++} p==2{print; exit} p>=1' $changelogname | sed '\$d' ;}" >> /root/.bashrc
fi

## Rewrite Bash Prompt
if [ -n "${CONTAINER_CUSTOM_BASH_PROMPT}" ] ; then
    bash_prompt=${CONTAINER_CUSTOM_BASH_PROMPT}
else
    image_version=$(get_image_version)
    if [ ! -z "${image_version// }" ] ; then
        bash_ver=":${image_version}"
    fi
    bash_prompt="[${IMAGE_NAME}${bash_ver} \\t \\w] $ "
fi

echo "export PS1=\"${bash_prompt/  /}\"" >> /root/.bashrc

## Add helper for reading compressed files
cat <<EOF >> /root/.bashrc
zcat () {
    if [ -f "\$@" ] ; then
        case "\$@" in
            *.zst* )      $(which zstdcat) "\$@" ;;
            *.bz*)       $(which zcat) "\$@" ;;
            *.gz*)       $(which zcat) "\$@" ;;
            *.xz)        $(which zcat) "\$@" ;;
        esac
    else
        echo "'\$@' is not a valid file!"
    fi
}
EOF

liftoff
output_on